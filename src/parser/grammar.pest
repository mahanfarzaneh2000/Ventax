Program = _{ SOI ~ (Expr ~ NewLine | Expr)+ ~ EOF }

Expr = { Print | UnaryExpr | BinaryExpr }

Print = { "print" ~ "(" ~ (UnaryExpr | BinaryExpr) ~ ")" }

Term = _{Int | "(" ~ Expr ~ ")" }

UnaryExpr = { Operator ~ Term }

BinaryExpr = { Term ~ (Operator ~ Term)* }

Operator = { "+" | "-" | "*" | "/" }

Int = @{ Operator? ~ ASCII_DIGIT+ }

WHITESPACE = _{ " " | "\t" }

EOF = _{ EOI | ";" }

NewLine = _{ "\n" | "\r\n" }
